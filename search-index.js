var searchIndex = JSON.parse('{\
"subspace_cli":{"doc":"CLI application for farming brings <code>farmer</code> and <code>node</code> together","t":[3,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,12,0,0,0,0,17,5,5,5,5,5,5,5,4,3,17,3,13,17,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,17,5,5,5,5,5,5,5,5,5,5,5,5,5,5],"n":["Cli","Commands","Farm","Info","Init","Wipe","as_any","as_any","as_any_mut","as_any_mut","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","commands","config","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","group_id","has_subcommand","init","init","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","main","summary","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","utils","vzip","vzip","verbose","farm","info","init","wipe","SINGLE_INSTANCE","farm","plotting_progress_bar","syncing_progress_bar","info","get_config_from_user_inputs","init","wipe","ChainConfig","Config","DEFAULT_PLOT_SIZE","FarmerConfig","Gemini3a","MIN_PLOT_SIZE","NodeConfig","address","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache","chain","create_config","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","directory","drop","drop","drop","drop","farmer","farmer","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","gemini_3a","gemini_3a","header","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","node","node","parse_config","plot_directory","plot_size","serialize","serialize","serialize","serialize","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","validate_config","vzip","vzip","vzip","vzip","FarmerSummary","Summary","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","delete_summary","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","farmed_block_count","file","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","get_farmed_block_count","get_initial_plotting_progress","get_user_space_pledged","init","init","initial_plotting_finished","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","new","parse_summary","serialize","summary_path","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","update","user_space_pledged","vzip","vzip","KEEP_LAST_N_FILE","cache_directory_getter","custom_log_dir","get_user_input","install_tracing","node_directory_getter","node_name_parser","plot_directory_getter","plot_directory_parser","print_ascii_art","print_version","raise_fd_limit","reward_address_parser","size_parser","support_message"],"q":["subspace_cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","subspace_cli::Commands","subspace_cli::commands","","","","subspace_cli::commands::farm","","","","subspace_cli::commands::info","subspace_cli::commands::init","","subspace_cli::commands::wipe","subspace_cli::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","subspace_cli::summary","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","subspace_cli::utils","","","","","","","","","","","","","",""],"d":["","Available commands for the CLI","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","allows us to detect multiple instances of the farmer and …","implementation of the <code>farm</code> command","nice looking progress bar for the initial plotting :)","nice looking progress bar for the syncing :)","implementation of the <code>init</code> command.","gets the necessary information from user, and writes them …","implementation of the <code>init</code> command","implementation of the <code>wipe</code> command","","structure of the config toml file","defaults for the user config file","structure for the <code>farmer</code> field of the config toml file","","","structure for the <code>farmer</code> field of the config toml file","","","","","","","","","","","","","","","","","","","","Creates a config file at the location","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","parses the config, and returns <code>Config</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","validates the config for farming","","","","","Struct for holding the information of what to be displayed …","utilizing persistent storage for the information to be …","","","","","","","","","","","","deletes the summary file","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","retrieves how many blocks have been farmed, from the …","retrieves the status of the initial plotting, from the …","retrives how much space has user pledged to the network …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","creates new summary file","parses the summary file and returns <code>FarmerSummary</code>","","returns the path for the summary file","","","","","","","","","","","","","","updates the summary file","","","","for how long a log file should be valid","generates a cache path from the given path","returns OS specific log directory","gets the input from the user for a given <code>prompt</code>","install a logger for the application","generates a node path from the given path","node name should be ascii, and should begin/end with …","generates a plot path from the given path","the provided path should be an existing directory","&lt;3","prints the version of the crate","","check for a valid SS58 address","utilize <code>ByteSize</code> crate for the validation","in case of any error, display this message"],"i":[0,0,7,7,7,7,4,7,4,7,4,4,7,7,4,7,4,7,4,4,4,0,0,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,4,7,7,4,4,7,7,4,7,4,7,4,7,4,4,7,7,4,4,7,7,4,4,7,7,4,7,4,7,0,0,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,0,4,7,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,0,0,27,24,26,27,25,24,26,27,25,24,26,27,25,24,26,27,25,27,24,0,25,24,26,27,25,24,26,27,25,24,26,27,25,26,24,26,27,25,24,27,25,24,26,27,25,24,24,26,26,27,27,25,25,24,24,26,26,27,27,25,25,25,26,27,25,24,26,27,25,24,26,27,25,24,24,26,26,27,27,25,25,24,24,26,26,27,27,25,25,24,24,26,26,27,27,25,25,24,26,27,25,24,26,27,25,24,26,0,27,27,24,26,27,25,25,24,26,27,25,24,26,27,25,24,26,27,25,24,26,27,25,24,26,27,25,24,26,27,25,0,24,26,27,25,0,0,35,36,35,36,35,36,35,36,35,35,35,0,36,35,36,35,36,36,35,36,35,36,35,36,35,36,36,35,35,36,36,35,35,35,35,35,36,35,36,36,35,36,36,35,35,36,36,35,35,36,36,35,35,36,35,36,35,35,35,36,0,35,36,35,36,35,36,35,36,35,36,35,36,35,35,36,36,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[2,2],[2,2],[2,2],[2,2],[[]],[[]],[[]],[[]],[[],2],0,[[],2],0,0,[3],[3],[3],[3],[3],[3],[[4,5],6],[[7,5],6],[[]],[[]],[8,[[10,[4,9]]]],[8,[[10,[7,9]]]],[8,[[10,[4,9]]]],[8,[[10,[7,9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[12,[11]]]],[13,14],[[],3],[[],3],[[]],[[]],[[[16,[15]]],[[16,[1,15]]]],[[[16,[15]]],[[16,[1,15]]]],[[[16,[15]]],[[16,[1,15]]]],[[[16,[15]]],[[16,[1,15]]]],[17,[[17,[1]]]],[17,[[17,[1]]]],[17,[[17,[1]]]],[17,[[17,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[[]],[[]],[[]],[[]],[[],[[10,[19]]]],0,[[],10],[[],10],[[],10],[[],10],[[],20],[[],20],[[],13],[[],13],[[]],[[]],[[]],[[]],[[4,8],[[10,[9]]]],[[7,8],[[10,[9]]]],[[4,8],[[10,[9]]]],[[7,8],[[10,[9]]]],0,[[]],[[]],0,0,0,0,0,0,[14,21],[22,23],[[22,22],23],[[],21],[[],[[21,[24]]]],[[],21],[[],21],0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],21],[[],25],[3],[3],[3],[3],[3],[3],[3],[3],[[],[[10,[24]]]],[[],[[10,[26]]]],[[],[[10,[27]]]],[[],[[10,[25]]]],0,[3],[3],[3],[3],0,0,[[25,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,[[21,[25]]]],[[28,29],26],[[30,28,31,32],27],[[],33],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[[16,[15]]],[[16,[1,15]]]],[[[16,[15]]],[[16,[1,15]]]],[[[16,[15]]],[[16,[1,15]]]],[[[16,[15]]],[[16,[1,15]]]],[[[16,[15]]],[[16,[1,15]]]],[[[16,[15]]],[[16,[1,15]]]],[[[16,[15]]],[[16,[1,15]]]],[[[16,[15]]],[[16,[1,15]]]],[17,[[17,[1]]]],[17,[[17,[1]]]],[17,[[17,[1]]]],[17,[[17,[1]]]],[17,[[17,[1]]]],[17,[[17,[1]]]],[17,[[17,[1]]]],[17,[[17,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],[[21,[24]]]],0,0,[24,10],[26,10],[27,10],[25,10],[[],29],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],20],[[],20],[[],20],[[],20],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[21,[24]]]],[[]],[[]],[[]],[[]],0,0,[34],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[35,35],[[]],[[]],[3],[3],[3],[3],[[],[[10,[36]]]],[3],[3],0,0,[[36,5],6],[[35,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,[[21,[22]]]],[35,[[21,[14]]]],[35,[[21,[31]]]],[[],3],[[],3],0,[[]],[[]],[[[16,[15]]],[[16,[1,15]]]],[[[16,[15]]],[[16,[1,15]]]],[[[16,[15]]],[[16,[1,15]]]],[[[16,[15]]],[[16,[1,15]]]],[17,[[17,[1]]]],[17,[[17,[1]]]],[17,[[17,[1]]]],[17,[[17,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[[]],[[]],[[]],[[]],[[[12,[31]]],[[21,[35]]]],[35,[[21,[36]]]],[36,10],[[],28],[[]],[[],10],[[],10],[[],10],[[],10],[[],20],[[],20],[[],13],[[],13],[[]],[[]],[[]],[[]],[[35,[12,[14]],[12,[22]]],21],0,[[]],[[]],0,[[],28],[[],28],[[13,12],21],[14],[[],28],[13,[[21,[29]]]],[[],28],[13,[[21,[28]]]],[[]],[[]],[[]],[13,[[21,[30]]]],[13,[[21,[31]]]],[[],29]],"p":[[8,"Any"],[3,"Command"],[15,"usize"],[3,"Cli"],[3,"Formatter"],[6,"Result"],[4,"Commands"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[15,"str"],[15,"bool"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"Report"],[3,"TypeId"],[6,"Result"],[15,"u64"],[3,"ProgressBar"],[3,"Config"],[4,"ChainConfig"],[3,"NodeConfig"],[3,"FarmerConfig"],[3,"PathBuf"],[3,"String"],[3,"PublicKey"],[3,"ByteSize"],[3,"CacheDescription"],[3,"IndentedSection"],[3,"Private"],[3,"Summary"],[3,"FarmerSummary"],[13,"Farm"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
